#!/usr/bin/perl

use strict;
use CGI qw(:standard);
use XML::Simple qw(:strict);
use LWP::UserAgent;

my $session     = time().rand();
my $scratch_dir = "/var/www/html/temp/GeoServer_extract/$session";
my $web_dir     = "/temp/GeoServer_extract/$session";
mkdir $scratch_dir;

# Get the POST data.
my $t;
read (STDIN,$t,$ENV{CONTENT_LENGTH});

# spin up the cgi
my $query = new CGI;

my $t2 = <<EOXML;
<layers>
  <layer name="foo" baseURL="http://somewhere">
    <metadata>http://metadata1/myfile.foo</metadata>
    <metadata>http://metadata2/myfile.bar</metadata>
  </layer>
  <layer name="mom" baseURL="http://somewhereelse">
    <metadata>http://metadata1/yourfile.foo</metadata>
    <metadata>http://metadata2/yourfile.bar</metadata>
  </layer>
</layers>
EOXML

# Bail if no data was passed as POST.
if (length($t) <= 0) {
  exit;
}

# Read data into XML object.
my $xml = XML::Simple->new();
my $doc = $xml->XMLin($t,forcearray => 1,KeyAttr => []);

my $ua = LWP::UserAgent->new((timeout => 100));

print $query->header('text/plain');

foreach (@{$doc->{layer}}) {
  my %h = %{$_};
  # the urls in the following line should match the geoserver and metadata-webserver host names
  if (!(unsafeXML($h{baseURL}) =~ /^http:\/\/(maps.massgis.state.ma.us|giswebservices.massgis.state.ma.us|170.63.166.213|170.63.166.214)/)) {
    next;
  }
  mkdir "$scratch_dir/".unsafeXML($h{name});

  # fire a POST request for SHAPE-ZIP since the incoming filter might be huge (not just a bbox)
  if (unsafeXML($h{baseURL}) =~ /outputformat=SHAPE-ZIP/) {
    my $base = substr(unsafeXML($h{baseURL}),0,index(unsafeXML($h{baseURL}),'?'));
    my %params;
    foreach my $s (split('&',unsafeXML($h{baseURL}))) {
      my @p = (substr($s,0,index($s,'=')),substr($s,index($s,'=') + 1));
      $params{lc($p[0])} = $p[1];
    }
    my $post_data = '<wfs:GetFeature outputFormat="SHAPE-ZIP" xmlns:wfs="http://www.opengis.net/wfs" service="WFS" version="1.1.0" xsi:schemaLocation="http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><wfs:Query typeName="'.$params{'typename'}.'" srsName="'.$params{'srsname'}.'" xmlns:massgis="http://massgis.state.ma.us/featuretype">'.$params{'filter'}.'</wfs:Query></wfs:GetFeature>';
    my $req = new HTTP::Request('POST',$base);
    $req->content_type('application/x-www-form-urlencoded');
    $req->content($post_data);
    my $r = $ua->request($req);
    if ($r->is_success) {
      open F,">$scratch_dir/".unsafeXML($h{name}).'/'.unsafeXML($h{name}).'.zip';
      print F $r->content;
      close F;
      my $cmd = "cd \"$scratch_dir/".unsafeXML($h{name})."\" ; unzip \"".unsafeXML($h{name}).'.zip'."\" ; rm -f \"".unsafeXML($h{name}).'.zip"';
      `$cmd`;
    }
  }
  else {
    my $r = $ua->get(unsafeXML($h{baseURL}));
    if ($r->is_success) {
      if  (unsafeXML($h{baseURL}) =~ /application\/vnd.google-earth.kml\+xml/) {
        open F,">$scratch_dir/".unsafeXML($h{name}).'/'.unsafeXML($h{name}).'.kml';
        print F $r->content;
        close F;
      }
      elsif (unsafeXML($h{wmsLayer}) ne '') {
        open F,">$scratch_dir/".unsafeXML($h{name}).'/'.unsafeXML($h{wmsLayer}).'.tif';
        print F $r->content;
        close F;
      }
      else {
        open F,">$scratch_dir/".unsafeXML($h{name}).'/'.unsafeXML($h{name});
        print F $r->content;
        close F;
      }
    }
  }

  foreach (@{$h{metadata}}) {
    my $u = unsafeXML($_);
    if (!(unsafeXML($u) =~ /^http:\/\/(maps.massgis.state.ma.us|giswebservices.massgis.state.ma.us)/)) {
      next;
    }
    my @p = split(/\//,$u);
    my $r = $ua->get($u);
    if ($r->is_success) {
      open F,">$scratch_dir/".unsafeXML($h{name})."/$p[$#p]";
      print F $r->content;
      close F;
    }
  }
}
my $zipName = $doc->{zip}[0]{name};
$zipName =~ s/\.zip//gi;

my $cmd = "cd $scratch_dir ; zip -r $zipName.zip *";
`$cmd`;

my $rmcmd = "cd $scratch_dir ; ls | grep -v .zip | tr \\\\n \\\\0 | xargs -0 rm -rf";
`$rmcmd`;

my $cmd = "setfacl -m u:afreeman:rwx $scratch_dir; setfacl -m u:afreeman:rw $scratch_dir/*.zip";
`$cmd`;

print "$web_dir/$zipName.zip\n";

sub unsafeXML {
  my $s = pop;
  $s =~ s/___EQ___/=/g;
  $s =~ s/___AMP___/&/g;
  $s =~ s/___LT___/</g;
  $s =~ s/___GT___/>/g;
  $s =~ s/___QUOT___/"/g;
  return $s;
}
